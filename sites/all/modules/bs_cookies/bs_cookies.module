<?php

/**
 * Implement hook_help()
 *
 * @param $path
 * @param $arg
 * @return string
 */
function bs_cookies_help($path, $arg) {
    switch ($path) {
        case 'admin/help#bs_cookies':
            return '<p>' . t('Module BioSample for Cookies.') . '</p>';
    }
}

/**
 * Implement hook_menu()
 *
 * @return array
 */
function bs_cookies_menu(){
    $items = array();

    $items['admin/BioSample/bs-cookies'] = array(
        'title' => t('BS - Cookies manager'),
        'description' => t('BS Cookies manager page'),
        'page callback' => 'drupal_get_form',
        'page arguments' => array('bs_cookies_admin_manager'),
        'access arguments' => array('administer site configuration'),
        'type' => MENU_NORMAL_ITEM,
    );

    return $items;
}

/**
 * Implement bs_cookies_admin_manager()
 *
 * @return mixed
 */
function bs_cookies_admin_manager(){

    $form['bs_cookies_text'] = array(
        '#type' => 'textarea',
        '#title' => t('Cookies - Texte'),
        '#description' => t('Saississez le texte qui sera affiché pour les cookies.'),
        '#default_value' => variable_get(
            'bs_cookies_text',
            '<em>biosample.fr</em> est un site qui utilise les cookies pour garantir une bonne navigation.' .
            'Vous pouvez accepter l\'utilisation de ces cookies pour une navigation optimum ou refuser d\'utiliser ces cookies.' .
            'Dans ce second cas, les services du site <em>biosample.fr</em> ne seront pas assurés.' .
            'Veuillez vous référer à la page cookie pour plus d\'infos.'
        ),
    );

    $form['bs_cookies_btn_yes'] = array(
        '#type' => 'textfield',
        '#title' => t('Cookies - Texte du bouton d\'acceptation des cookies'),
        '#description' => t('Saississez le texte qui sera affiché sur le bouton d\'acceptation des cookies.'),
        '#default_value' => variable_get(
            'bs_cookies_btn_yes',
            'Accepter'
        ),
    );

    $form['bs_cookies_btn_no'] = array(
        '#type' => 'textfield',
        '#title' => t('Cookies - Texte du bouton de refus des cookies'),
        '#description' => t('Saississez le texte qui sera affiché sur le bouton de refus des cookies.'),
        '#default_value' => variable_get(
            'bs_cookies_btn_no',
            'Refuser'
        ),
    );

    return system_settings_form($form);
}

/**
 * Implement hook_init()
 */
function bs_cookies_init(){

    // Check if "biosample_cookie_use" is set
    if(isset($_COOKIE["biosample_cookie_use"])){

        // Check if "biosample_cookie_use" value is "no"
        if($_COOKIE["biosample_cookie_use"] == "no"){

            // Foreach every cookies then delete them except "biosample_cookie_use"
            foreach ($_COOKIE as $key => $val) {

                if ($key != "biosample_cookie_use") {

                    unset($_COOKIE[$key]);
                    setcookie($key, '', time() - 3600, '/'); // empty value and old timestamp
                }
            }
        }
    }

}

/**
 * Implement hook_theme()
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function bs_cookies_theme($existing, $type, $theme, $path) {
    return array(
        'tpl_cookies' => array(
            'template' => 'template/bs-cookies',
            'path' => drupal_get_path('module', 'bs_cookies'),
            'variables' => array('infos' => NULL),
        ),
    );
}

/**
 * Implement hook_block_info()
 *
 * @return array
 */
function bs_cookies_block_info() {
    $blocks = array();

    $blocks['bs_cookies'] = array(
        'info' => t('BioSample - Cookies'),
        'status' => TRUE,
        'region' => 'footer',
        'visibility' => BLOCK_VISIBILITY_NOTLISTED,
        'weight' => 1,
    );

    return $blocks;
}


/**
 * Implement hook_block_view()
 *
 * @see hook_block_info()
 */
function bs_cookies_block_view($delta = '') {
    $block = array();

    switch ($delta) {
        case 'bs_cookies':

            $cookie_name = 'biosample_cookie_use';

            // If there is no cookie with the name above, display cookie banner else display nothing
            if( !isset($_COOKIE[$cookie_name]) ) {

                $data['cookies_text'] = variable_get('bs_cookies_text');

                $data['form_user_choice'] = drupal_render(drupal_get_form('bs_cookies_user_choice_form'));

                // Link the template for the rsb map
                $block['content']['#markup'] = theme('tpl_cookies', $data);

                // Link a css file for the rsb map
                $block['content']['#attached']['css'][] = array(
                    'data' => drupal_get_path('module', 'bs_cookies') . '/css/bs-cookies.css',
                    'type' => 'file'
                );

                // Link a js file for the rsb map
                $block['content']['#attached']['js'][] = array(
                    'data' => drupal_get_path('module', 'bs_cookies') . '/js/bs-cookies.js',
                    'type' => 'file'
                );
            }

            break;
    }

    return $block;
}

/**
 * Implements hook_form()
 *
 * @param $form
 * @param $form_state
 * @return mixed
 */
function bs_cookies_user_choice_form($form, $form_state){

    // Cookies - User choice - YES
    $form['cookies_user_choice']['yes'] = array(
        '#type' => 'submit',
        '#value' => variable_get('bs_cookies_btn_yes'),
        '#weight' => 1,
    );

    // Cookies - User choice - YES
    $form['cookies_user_choice']['no'] = array(
        '#type' => 'submit',
        '#value' => variable_get('bs_cookies_btn_no'),
        '#weight' => 2,
    );

    $form['cookies_user_choice']['yes']['#submit'][] = 'bs_cookies_user_choice_yes_form_submit';
    $form['cookies_user_choice']['no']['#submit'][] = 'bs_cookies_user_choice_no_form_submit';

    return $form;
}

/**
 * Implements bs_cookies_user_choice_yes_form_submit()
 *
 * @param $form
 * @param $form_state
 */
function bs_cookies_user_choice_yes_form_submit($form, &$form_state){

    /* Enable cookies */

    // Set a cookie and delete it after 30 days
    $cookie_name = 'biosample_cookie_use';
    $cookie_value = 'yes';
//    setcookie($cookie_name, $cookie_value, time() + (10), '/'); // 86400 = 1 day
    setcookie($cookie_name, $cookie_value, time() + (86400 * 30), '/'); // 86400 = 1 day
}

/**
 * Implements bs_cookies_user_choice_no_form_submit()
 *
 * @param $form
 * @param $form_state
 */
function bs_cookies_user_choice_no_form_submit($form, &$form_state){

    /* Disable cookies */

    // Set a cookie and delete it after browse is closed
    $cookie_name = 'biosample_cookie_use';
    $cookie_value = 'no';
    setcookie( $cookie_name, $cookie_value, 0, '/');
}
